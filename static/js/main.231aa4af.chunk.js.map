{"version":3,"sources":["Componets/Header/Header.js","images/icon-check.svg","Componets/Task/Task.js","Componets/List/List.js","App.js","index.js"],"names":["Header","tasks","setTasks","setIsDark","isDark","randomKey","Math","random","toString","substring","className","onClick","xmlns","width","height","fill","fillRule","d","placeholder","onKeyUp","e","code","target","value","task","id","completed","filter","Task","RemoveTask","CompleteTask","checkedClass","src","checkedIcon","alt","List","useState","active","setActive","filt","newTasks","map","length","onDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","App","document","body","classList","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.231aa4af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../Styles/main.scss\";\r\nimport \"./Header.scss\";\r\nconst Header = ({ tasks, setTasks, setIsDark, isDark }) => {\r\n  const randomKey = Math.random().toString(36).substring(2);\r\n  //console.log(randomKey);\r\n  const addTask = (e) => {\r\n    if (\r\n      (e.code === \"NumpadEnter\" || e.code === \"Enter\") &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      setTasks([\r\n        { task: e.target.value, id: randomKey, completed: false },\r\n        ...tasks.filter((task) => task.completed === false),\r\n        ...tasks.filter((task) => task.completed === true),\r\n        //...tasks,\r\n      ]);\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header className={isDark ? \"header dark\" : \"header\"}>\r\n      <div className=\"container\">\r\n        <div className=\"todo\">\r\n          <h1 className=\"todo-text\">todo</h1>\r\n          <div\r\n            onClick={() => {\r\n              setIsDark(!isDark);\r\n            }}\r\n          >\r\n            {!isDark && (\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\">\r\n                <path\r\n                  fill=\"#FFF\"\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M13 0c.81 0 1.603.074 2.373.216C10.593 1.199 7 5.43 7 10.5 7 16.299 11.701 21 17.5 21c2.996 0 5.7-1.255 7.613-3.268C23.22 22.572 18.51 26 13 26 5.82 26 0 20.18 0 13S5.82 0 13 0z\"\r\n                />\r\n              </svg>\r\n            )}\r\n            {isDark && (\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\">\r\n                <path\r\n                  fill=\"#FFF\"\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M13 21a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-5.657-2.343a1 1 0 010 1.414l-2.121 2.121a1 1 0 01-1.414-1.414l2.12-2.121a1 1 0 011.415 0zm12.728 0l2.121 2.121a1 1 0 01-1.414 1.414l-2.121-2.12a1 1 0 011.414-1.415zM13 8a5 5 0 110 10 5 5 0 010-10zm12 4a1 1 0 110 2h-3a1 1 0 110-2h3zM4 12a1 1 0 110 2H1a1 1 0 110-2h3zm18.192-8.192a1 1 0 010 1.414l-2.12 2.121a1 1 0 01-1.415-1.414l2.121-2.121a1 1 0 011.414 0zm-16.97 0l2.121 2.12A1 1 0 015.93 7.344L3.808 5.222a1 1 0 011.414-1.414zM13 0a1 1 0 011 1v3a1 1 0 11-2 0V1a1 1 0 011-1z\"\r\n                />\r\n              </svg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"create\">\r\n          <span className=\"check-circle\"></span>\r\n          <input placeholder=\"Create a new todo...\" onKeyUp={addTask}></input>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","import React from \"react\";\r\nimport \"./Task.scss\";\r\nimport checkedIcon from \"../../images/icon-check.svg\";\r\nconst Task = ({ completed,task,RemoveTask,CompleteTask }) => {\r\n  const checkedClass = completed ? \"checked\" : \"\" ;\r\n  return (\r\n    <div className=\"task\">\r\n      <span className={\"check-circle \" + checkedClass} onClick={()=>CompleteTask(task.id)}>\r\n        {completed && <img src={checkedIcon} alt=\"\"></img>}\r\n      </span>\r\n      <span className={\"text \" + checkedClass}>{task.task}</span>\r\n      <span className=\"close\" onClick={()=>{RemoveTask(task.id)}}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\">\r\n          <path\r\n            fill=\"#494C6B\"\r\n            fillRule=\"evenodd\"\r\n            d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"\r\n          />\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useState } from \"react\";\r\nimport \"./List.scss\";\r\nimport Task from \"../Task/Task\";\r\nimport { BiTask } from \"react-icons/bi\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst List = ({ tasks, setTasks }) => {\r\n  const [active, setActive] = useState(\"all\");\r\n  const filt = () => {\r\n    return active === \"all\"\r\n      ? /*[\r\n          ...tasks.filter((task) => task.completed === false),\r\n          ...tasks.filter((task) => task.completed === true),\r\n        ]*/ tasks\r\n      : tasks.filter((task) => task.completed === active);\r\n  };\r\n\r\n  const RemoveTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n  const CompleteTask = (id) => {\r\n    const newTasks = tasks.map((task) => {\r\n      task.completed = task.id === id ? !task.completed : task.completed;\r\n      return task;\r\n    });\r\n    setTasks([\r\n      ...newTasks.filter((task) => task.completed === false),\r\n      ...newTasks.filter((task) => task.completed),\r\n    ]);\r\n  };\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n    const items = Array.from(tasks);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n    setTasks(items);\r\n  };\r\n  const droppableId = \"tasks\";\r\n  return (\r\n    <>\r\n      {filt().length === 0 && (\r\n        <div className=\"empty-list\">\r\n          <div className=\"icon-container\">\r\n            <BiTask className=\"icon\"></BiTask>\r\n          </div>\r\n          <h2 className=\"text\">No Tasks here</h2>\r\n          {tasks.length > 0 && (\r\n            <div className=\"control\">\r\n              <div>\r\n                {tasks.filter((task) => task.completed === false).length} items\r\n                left\r\n              </div>\r\n              {tasks.length > 0 && (\r\n                <div className=\"filter desktop-only\">\r\n                  <ul>\r\n                    <li\r\n                      className={active === \"all\" ? \"active\" : null}\r\n                      onClick={() => setActive(\"all\")}\r\n                    >\r\n                      All\r\n                    </li>\r\n                    <li\r\n                      className={active === false ? \"active\" : null}\r\n                      onClick={() => setActive(false)}\r\n                    >\r\n                      Active\r\n                    </li>\r\n                    <li\r\n                      className={active === true ? \"active\" : null}\r\n                      onClick={() => setActive(true)}\r\n                    >\r\n                      Completed\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              <div\r\n                className=\"clear\"\r\n                onClick={() => {\r\n                  setTasks(tasks.filter((task) => task.completed === false));\r\n                }}\r\n              >\r\n                Clear Completed\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {tasks.length > 0 && filt().length > 0 && (\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n          <Droppable droppableId={droppableId}>\r\n            {(provided) => (\r\n              <div className=\"list-conainer\">\r\n                <div\r\n                  className=\"list\"\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                >\r\n                  {filt().length === tasks.length &&\r\n                    filt().map((task, index) => (\r\n                      <Draggable\r\n                        key={task.id}\r\n                        draggableId={task.id.toString()}\r\n                        index={index}\r\n                      >\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                          >\r\n                            <Task\r\n                              completed={task.completed}\r\n                              task={task}\r\n                              RemoveTask={RemoveTask}\r\n                              CompleteTask={CompleteTask}\r\n                            ></Task>\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))}\r\n                  {provided.placeholder}\r\n                  {filt().length !== tasks.length &&\r\n                    filt().map((task) => (\r\n                      <Task\r\n                        completed={task.completed}\r\n                        task={task}\r\n                        RemoveTask={RemoveTask}\r\n                        CompleteTask={CompleteTask}\r\n                      ></Task>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"control\">\r\n                  <div>\r\n                    {tasks.filter((task) => task.completed === false).length}{\" \"}\r\n                    items left\r\n                  </div>\r\n                  {tasks.length > 0 && (\r\n                    <div className=\"filter desktop-only\">\r\n                      <ul>\r\n                        <li\r\n                          className={active === \"all\" ? \"active\" : null}\r\n                          onClick={() => setActive(\"all\")}\r\n                        >\r\n                          All\r\n                        </li>\r\n                        <li\r\n                          className={active === false ? \"active\" : null}\r\n                          onClick={() => setActive(false)}\r\n                        >\r\n                          Active\r\n                        </li>\r\n                        <li\r\n                          className={active === true ? \"active\" : null}\r\n                          onClick={() => setActive(true)}\r\n                        >\r\n                          Completed\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                  <div\r\n                    className=\"clear\"\r\n                    onClick={() => {\r\n                      setTasks(\r\n                        tasks.filter((task) => task.completed === false)\r\n                      );\r\n                    }}\r\n                  >\r\n                    Clear Completed\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      )}\r\n\r\n      {tasks.length > 0 && (\r\n        <div className=\"filter mobile-only\">\r\n          <ul>\r\n            <li\r\n              className={active === \"all\" ? \"active\" : null}\r\n              onClick={() => setActive(\"all\")}\r\n            >\r\n              All\r\n            </li>\r\n            <li\r\n              className={active === false ? \"active\" : null}\r\n              onClick={() => setActive(false)}\r\n            >\r\n              Active\r\n            </li>\r\n            <li\r\n              className={active === true ? \"active\" : null}\r\n              onClick={() => setActive(true)}\r\n            >\r\n              Completed\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { useState } from \"react\";\nimport Header from \"./Componets/Header/Header\";\nimport List from \"./Componets/List/List\";\nfunction App() {\n  const [tasks, setTasks] = useState([\n    { id: 1, task: \"hey\", completed: false },\n    { id: 2, task: \"take the nothing\", completed: false },\n    { id: 3, task: \"go to sleep\", completed: true },\n    { id: 4, task: \"useless task\", completed: true },\n  ]);\n  const [isDark, setIsDark] = useState(true);\n  document.body.classList = isDark ? \"dark\" : \"\";\n  return (\n    <div className={isDark && \"dark\"}>\n      <Header\n        tasks={tasks}\n        setTasks={setTasks}\n        isDark={isDark}\n        setIsDark={setIsDark}\n      ></Header>\n      <div className=\"container\">\n        <List tasks={tasks} setTasks={setTasks}></List>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}